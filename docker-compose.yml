version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rayqube-postgres
    environment:
      POSTGRES_DB: rayqube_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rayqube-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rayqube-backend
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=rayqube_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - JWT_SECRET=dev-jwt-secret-key-change-in-production-12345
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - rayqube-network
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rayqube-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
      - NEXT_PUBLIC_APP_NAME=Rayqube AI Test
      - NEXT_PUBLIC_AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - NEXT_PUBLIC_AWS_REGION=${AWS_REGION}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - rayqube-network
    command: npm run dev

volumes:
  postgres_data:

networks:
  rayqube-network:
    driver: bridge
